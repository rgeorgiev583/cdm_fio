#!/bin/bash

# This script is based on https://unix.stackexchange.com/revisions/480191/9 .
# The following changes proved to be necessary to make it work on CentOS 7:
#  * removed disk info (model, size) - not very useful, might not work in many cases.
#  * using "bw" instead of "bw_bytes" to support fio version 3.1 (those availible through yum @base)
#  * escaping exclamation mark in sed command
#  * the ".fiomark.txt" is not auto-removed 

LOOPS=5 #How many times to run each test
SIZE=1024 #Size of each test, multiples of 32 recommended for Q32 tests to give the most accurate results.
WRITEZERO=0 #Set whether to write zeroes or randoms to testfile (random is the default for both fio and crystaldiskmark); dd benchmarks typically only write zeroes which is why there can be a speed difference.

QSIZE=$((SIZE / 32)) #Size of Q32Seq tests
SIZE+=m
QSIZE+=m

if [[ -z $1 ]]; then
    TARGET=$HOME
    echo "Defaulting to $TARGET for testing"
else
    TARGET="$1"
    echo "Testing in $TARGET"
fi



echo "Configuration: Size:$SIZE Loops:$LOOPS Write Only Zeroes:$WRITEZERO
Running Benchmark,  please wait...
"

fio --loops=$LOOPS --size=$SIZE --filename="$TARGET/.fiomark.tmp" --stonewall --ioengine=libaio --direct=1 --zero_buffers=$WRITEZERO --output-format=json \
  --name=Bufread --loops=1 --bs=$SIZE --iodepth=1 --numjobs=1 --rw=readwrite \
  --name=Seqread --bs=$SIZE --iodepth=1 --numjobs=1 --rw=read \
  --name=Seqwrite --bs=$SIZE --iodepth=1 --numjobs=1 --rw=write \
  --name=512kread --bs=512k --iodepth=1 --numjobs=1 --rw=read \
  --name=512kwrite --bs=512k --iodepth=1 --numjobs=1 --rw=write \
  --name=SeqQ32T1read --bs=$QSIZE --iodepth=32 --numjobs=1 --rw=read \
  --name=SeqQ32T1write --bs=$QSIZE --iodepth=32 --numjobs=1 --rw=write \
  --name=4kread --bs=4k --iodepth=1 --numjobs=1 --rw=randread \
  --name=4kwrite --bs=4k --iodepth=1 --numjobs=1 --rw=randwrite \
  --name=4kQ32T1read --bs=4k --iodepth=32 --numjobs=1 --rw=randread \
  --name=4kQ32T1write --bs=4k --iodepth=32 --numjobs=1 --rw=randwrite \
  --name=4kQ8T8read --bs=4k --iodepth=8 --numjobs=8 --rw=randread \
  --name=4kQ8T8write --bs=4k --iodepth=8 --numjobs=8 --rw=randwrite > "$TARGET/.fiomark.txt"

function invoke_jq_for_job
{
	jobname=$1
	jobtype=$2
	metric=$3
	jq ".jobs | map(select(.jobname == \"$jobname\"))[0].$jobtype.$metric" "$TARGET/.fiomark.txt"
}

declare -A mbps
declare -A iops

for jobname in Seqread 512kread SeqQ32T1read 4kread 4kQ32T1read 4kQ8T8read; do
	mbps[$jobname]=$(($(invoke_jq_for_job "$jobname" read bw)/1024))
	iops[$jobname]=$(invoke_jq_for_job "$jobname" read iops)
done

for jobname in Seqwrite 512kwrite SeqQ32T1write 4kwrite 4kQ32T1write 4kQ8T8write; do
	mbps[$jobname]=$(($(invoke_jq_for_job "$jobname" write bw)/1024))
	iops[$jobname]=$(invoke_jq_for_job "$jobname" write iops)
done

echo -e "
Results:
\033[0;33m
Sequential Read: ${mbps[Seqread]}MB/s IOPS=${iops[Seqread]}
Sequential Write: ${mbps[Seqwrite]}MB/s IOPS=${iops[Seqwrite]}
\033[0;32m
512KB Read: ${mbps[512kread]}MB/s IOPS=${iops[512kread]}
512KB Write: ${mbps[512kwrite]}MB/s IOPS=${iops[512kwrite]}
\033[1;36m
Sequential Q32T1 Read: ${mbps[SeqQ32T1read]}MB/s IOPS=${iops[SeqQ32T1read]}
Sequential Q32T1 Write: ${mbps[SeqQ32T1write]}MB/s IOPS=${iops[SeqQ32T1write]}
\033[0;36m
4KB Read: ${mbps[4kread]}MB/s IOPS=${iops[4kread]}
4KB Write: ${mbps[4kwrite]}MB/s IOPS=${iops[4kwrite]}
\033[1;33m
4KB Q32T1 Read: ${mbps[4kQ32T1read]}MB/s IOPS=${iops[4kQ32T1read]}
4KB Q32T1 Write: ${mbps[4kQ32T1write]}MB/s IOPS=${iops[4kQ32T1write]}
\033[1;35m
4KB Q8T8 Read: ${mbps[4kQ8T8read]}MB/s IOPS=${iops[4kQ8T8read]}
4KB Q8T8 Write: ${mbps[4kQ8T8write]}MB/s IOPS=${iops[4kQ8T8write]}
"

# rm "$TARGET/.fiomark.txt"
rm "$TARGET/.fiomark.tmp"
